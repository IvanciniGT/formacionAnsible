# Quiero instalar el servidor web nginx y lo quiero montar en máquinas UBUNTU
# Lo único que quiero dejar el nginx funcionando en un puerto de mi interés
# Quiero poder trabajar con mi propio document root
# Que se rellene con los ficheros que tengamos en un repo de git
# https://github.com/IvanciniGT/webEjemploAnsible
# RESPETANDO EL PRINCIPIO DE IDEMPOTENCIA !

-   hosts:              localhost
    gather_facts:       false
    vars:
        nginx:
            version: 
        app:
            tag: 
            repo:
            document_root:
            host: 
            puerto:
            test:
                -   url:
                    response:
                -   url:
                    response:
        required:
            - curl
            - git

    pre_tasks:
        
        -   name:       Extraer información relevante de la máquina
            setup:
                gather_subset:
                  - distribution
            tags: 
                - obligatorio
    
        -   name:       "DEBUG: Mostrar la distribución"
            debug:
                var:        ansible_facts.distribution
            tags: 
                - debug
                
            # Necesito chequear que la máquina sea UBUNTU... ya que si no es CIERRO EL GRIFO !
        -   name:       Asegurarme que estoy en una máquina UBUNTU
            # ACABAR EL PLAY.
            meta: end_host
            when: # Si no estoy en una máquina UBUNTU
                  # Y de donde lo saco? ansible_facts... los tengo? NO
                # Pues habrña que conseguirlos: Opciones:
                # 1: gather_facts -> true       Esto es pa' los novatos de ansible.
                                                # Nosotros somo pro !
                # 2: pedir los datos que necesito
                - ansible_facts.distribution != "Ubuntu"
            tags: 
                - obligatorio

#        -   name:       Asegurarme que los repos de ubuntu de apt están actualizados
#            apt:
#                update_cache: yes
#            tags: 
#                - preinstalacion
#                - prerequisitos
            
        -   name:       Asegurarme que tengo instalado lo que sea que necesito tener instalado
            # Bloque :
                # 1ª tarea que ahora no estamos poiendo 
                #       Dar de alta el repo en apt y la clave del repo
            apt:
                name:       {{ item }}
                state:      latest
                update_cache: true   # Esto me evita la tarea de arriba
            loop: "{{ required }}"
            tags: 
                - preinstalacion
                - prerequisitos

    tasks:
        -   name:       Mirar si nginx está instalado
            shell:
                cmd:        "nginx -v 2>&1 | egrep -o '[0-9.]+'"
            register:       pre_instalado_nginx
            changed_when:   false       # Por defecto un shell se marca siempre como CHANGED. No queremos eso
            failed_when:    false       # Si no está nginx, daría error... pero para nosotros no es un error,
                                        # Es la forma de saber si nginx está instalado
            tags: 
                - instalacion

        -   name:       "DEBUG: Mostrar la salida del comando de nginx para saber si existe"
            debug:
                var:        pre_instalado_nginx
            tags: 
                - debug
                
        -   name:       Mirar si hay un servicio para nginx
            service_facts:
            tags: 
                - instalacion
                
            # Mirar si está instalado:
            #   qué versión está instalada
            #       Si la versión de nginx ha cambiado? DETENER SERVICIO
            #   el puerto en el que churulaba y document root
            #       Si ha cambiado? DETENER SERVICIO
        -   name:       Asegurarme que el servicio de nginx está detenido si es necesario
            block:
                -   name:   Consultar el puerto
                    shell:
                        cmd: >
                                egrep 
                                    -o "^\\s+listen ([0-9]+) " 
                                    /etc/nginx/sites-available/default 
                                | egrep 
                                    -o "[0-9]+"
                    changed_when:   false
                    failed_when:    false
                    register: puerto_previo_nginx
                
                -   name:   Consultar el document_root
                    shell:
                        cmd: >
                                egrep 
                                    -o "^\\s+root .*;" 
                                    /etc/nginx/sites-available/default 
                                | egrep 
                                    -o "/[^;]+"
                    changed_when:   false
                    failed_when:   false
                    register: document_root_previo_nginx

                    # regex101.com
    
                -   name:   Asegurarse que el servicio queda detenido en caso necesario
                    service:
                        name: nginx
                        state: stopped
                    when: >   
                            pre_instalado_nginx.stdout.strip()          != nginx.version        or
                            puerto_previo_nginx.stdout.strip()          != app.puerto           or
                            document_root_previo_nginx.stdout.strip()   != app.document_root
                    # Si la version de nginx instalada es distinta de la solicitada
                    #  version_previa_nginx             nginx.version
                    # O si el puerto ha cambiado
                    #  puerto_previo_nginx              app.puerto
                    # O si el document_root ha cambiado
                    #  document_root_previo_nginx       app.document_root
                
            when: # nginx esté instalado y tiene servicio
                # - pre_instalado_nginx is failed? NO , ya que yo le he dicho que nunca falle
                - pre_instalado_nginx.rc == 0   # pre_instalado_nginx
                - ansible_facts.services['nginx.service'] is defined   # pre_creado_servicio_nginx
            tags: 
                - instalacion
                - configuracion

        -   name:       Asegurarme que tal versión de nginx está instalada
                        # Se encarga de instalar la nueva versión, caso de que no esté instalada
            apt:
                name:               "nginx={{nginx.version}}"
                state:              present
                allow_downgrade:    true
                update_cache:       true   
            tags: 
                - instalacion
                
        -   name:       Asegurarme que el nginx tiene la configuración que quiero
                        # Meter run fichero .conf
            block: 
                -   name:   Asegurarme que la nueva configuración queda aplicada y que tengo backup
                    template:
                        src:    ./plantilla_fichero_configuracion_nginx.jinja2
                        dest:   /etc/nginx/sites/available/default
                        mode:   '0444'
                        backup: true
                    notify:     DESPLIEGUE_CAMBIADO
            when: >
                    puerto_previo_nginx.stdout.strip()          != app.puerto           or
                    document_root_previo_nginx.stdout.strip()   != app.document_root
                # O si el puerto ha cambiado
                #  puerto_previo_nginx              app.puerto
                # O si el document_root ha cambiado
                #  document_root_previo_nginx       app.document_root
            tags: 
                - despliegue # configuracion
                
        -   name:       Asegurarme que tengo un servicio de nginx
                    # Crear el servicio de nginx si es que no está ya creado
            tags: 
                - instalacion
                
        -   name:       "Guardar en algún sitio la versión que ahora mismo estaba en funcionamiento : TAG de GIT"
                        # Extraer esa info (tag de git o un backup completo) y guarlarla en un archivo
            tags: 
                - despliegue
                - backup

        -   name:       Asegurarme que tengo en la carpeta de marras descargada la ultima version del repo de git de turno
                        # Extraer de git la version solicitada de la app
            notify:     DESPLIEGUE_CAMBIADO
            tags: 
                - despliegue
                
        -   name:       Asegurarme que el servicio de nginx está levantado y activado
                        # Habla por si solo!
            tags:
                - instalacion
                - despliegue
                - obligatorio



    post_tasks:
        -   name:       Pruebas de humo
            block: 
                -   name:   Asegurarme que la máquina tiene conectividad
                    tags:
                        - pruebas

                -   name:   Asegurarme que nginx está arriba
                    tags:
                        - pruebas

                -   name:   Asegurarme que nginx esta sirviendo la app
                    tags:
                        - pruebas

                -   name:   Notificacion ok
                    tags:
                        - notificacion
            rescue:
                -   name:   Notificacion error
                    tags:
                        - notificacion
            tags:
                - despliegue
                - instalacion
            
    handlers:
        name:           Reinicio del servicio de nginx
        listen:
                      - DESPLIEGUE_CAMBIADO

